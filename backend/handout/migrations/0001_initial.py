# Generated by Django 4.2 on 2024-07-18 04:18

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_jalali.db.models
import handout.models.handout


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', django_jalali.db.models.jDateTimeField(auto_now_add=True)),
                ('updated_at', django_jalali.db.models.jDateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=150, verbose_name='author name')),
            ],
            options={
                'verbose_name': 'Author',
                'verbose_name_plural': 'Authors',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', django_jalali.db.models.jDateTimeField(auto_now_add=True)),
                ('updated_at', django_jalali.db.models.jDateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=150, verbose_name='category name')),
                ('slug', models.SlugField(help_text='by this link users will access to this category page.', unique=True, verbose_name='access link')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='handout.category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categorys',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', django_jalali.db.models.jDateTimeField(auto_now_add=True)),
                ('updated_at', django_jalali.db.models.jDateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=150, verbose_name='tag name')),
                ('slug', models.SlugField(help_text='by this link users will access to this Tag page.', unique=True, verbose_name='access link')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='Handout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', django_jalali.db.models.jDateTimeField(auto_now_add=True)),
                ('updated_at', django_jalali.db.models.jDateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, verbose_name='Handout name')),
                ('slug', models.SlugField(help_text='by this link users will access to this Handout.', unique=True, verbose_name='access')),
                ('description', models.TextField(max_length=500, verbose_name='description')),
                ('page_count', models.PositiveIntegerField(verbose_name='page count')),
                ('visit_count', models.PositiveIntegerField(default=0, verbose_name='View count')),
                ('publish_time', django_jalali.db.models.jDateField(verbose_name='publish date')),
                ('file_size', models.PositiveIntegerField(editable=False, verbose_name='file size')),
                ('file_name', models.CharField(blank=True, help_text='if you leave it blank the file name of uploaded file will be replaced.', max_length=150, verbose_name='file name')),
                ('file', models.FileField(upload_to=handout.models.handout.get_upload_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])], verbose_name='file to upload')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='handout', to='handout.author', verbose_name='author')),
                ('category', models.ManyToManyField(to='handout.category', verbose_name='category')),
                ('tag', models.ManyToManyField(blank=True, to='handout.tag', verbose_name='tag')),
            ],
            options={
                'verbose_name': 'Handout',
                'verbose_name_plural': 'Handouts',
            },
        ),
    ]
